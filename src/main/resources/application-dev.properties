server.port = 8088
server.context-path=/
server.tomcat.max-threads = 200
server.tomcat.max-connections= 300
server.session.timeout=1800
## HTTP encoding (HttpEncodingProperties)
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

#eureka.client.enabled=true
#eureka.client.register-with-eureka=true
#eureka.client.service-url.defaultZone = http://admin:admin123456@192.168.0.106:8090/eureka/
#security.basic.enabled=false

#单位秒
spring.devtools.restart.enabled=true
#开发时关闭缓存,不然没法看到实时页面
#spring.thymeleaf.cache=false
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.content-type=text/html
#数据源配置
spring.datasource.url=jdbc:mysql://49.235.97.72:3306/chengxp?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false
spring.datasource.username=chengxp
spring.datasource.password=3225230
#spring.datasource.url=jdbc:postgresql://39.108.9.61:5432/chengxp
#spring.datasource.username=chengxp
#spring.datasource.password=3225230
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
datasource.initialize=10
datasource.maxActive=60
datasource.minIdle=10
datasource.maxWait=60000
datasource.validationQuery=select 1
 # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
datasource.connectionProperties=druid.stat.mergeSql:true;druid.stat.slowSqlMillis:5000
# 合并多个DruidDataSource的监控数据
useGlobalDataSourceStat=true

#第二个数据源配置
spring.second.datasource.url=jdbc:mysql://49.235.97.72:3306/chengxp?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false
spring.second.datasource.username=chengxp
spring.second.datasource.password=3225230
#spring.datasource.url=jdbc:postgresql://39.108.9.61:3306/chengxp
#spring.datasource.username=chengxp
#spring.datasource.password=3225230
spring.second.datasource.driver-class-name=com.mysql.jdbc.Driver



# Redis服务器地址
spring.redis.host=49.235.97.72
#spring.redis.host=39.108.9.61
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=3225230
#spring.redis.password=3225230
# Redis数据库索引（默认为0）
spring.redis.database=1
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=30
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=20
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=5
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=60000
# 连接超时时间（毫秒）
spring.redis.timeout=30000

#配置org.crazycake.shiro.RedisManager缓存的过期时间(秒)
spring.redis.expire.timeout=1800

#mybatis配置
#mybatis.mapper-locations=classpath:static/mybatis/*Mapper.xml
#扫描实体包中实体，得到别名
#mybatis.type-aliases-package=com.cxp.personalmanage.pojo

#上传文件配置
spring.http.multipart.enabled=true
#单个文件大小
spring.http.multipart.max-file-size=50MB
#maxRequestSize是设置总上传的数据大小
spring.http.multipart.max-request-size=100MB
file.uploadFolder=/Users/cheng/Desktop/eclipse/project_logs/logs/images/

logging.level.root=INFO
#logging.pattern.console=%d [%t] %-5p [%c] - %m%n
#logging.file=G:/feiqiu/logs/shiro.log
logging.config=classpath:log4j-dev.properties

#server.ssl.key-store=keystore.p12
#server.ssl.key-store-password=123456
#server.ssl.keyStoreType=PKCS12
#server.ssl.keyAlias=tomcat


#邮箱服务器地址
spring.mail.host=smtp.163.com
spring.mail.protocol=smtp
#用户名
spring.mail.username=cheng3_shan3@163.com
#密码
spring.mail.password=ENC(MZtHEo03YZ+NrK5Bba/imbk/0/jumz+G)
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.test-connection=false

# ssl 配置  (非ssl发送一般是25端口,linux服务器一般都是禁用的,所以要切换465)
spring.mail.port=465
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.imap.ssl.socketFactory.fallback=false
spring.mail.properties.mail.smtp.ssl.socketFactory.class=com.cxp.personalmanage.controller.mail.MailSSLSocketFactory

#以谁来发送邮件
mail.fromMail.addr=cheng3_shan3@163.com

jasypt.encryptor.password=chengxp

#rabbitmq配置
spring.rabbitmq.enable=true

spring.rabbitmq.host=49.235.97.72
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.virtual-host=/
spring.rabbitmq.connection-timeout=30000
#是否创建AmqpAdmin bean. 默认为: true)
spring.rabbitmq.dynamic=true
#生产端
# 开启发送确认
spring.rabbitmq.publisher-confirms=true
# 开启发送失败退回
spring.rabbitmq.publisher-returns=true
#消费端
spring.rabbitmq.listener.simple.acknowledge-mode=manual
# 指定一个请求能处理多少个消息，如果有事务的话，必须大于等于transaction数量.
spring.rabbitmq.listener.simple.prefetch=1
#指定一个事务处理的消息数量，最好是小于等于prefetch的数量.
spring.rabbitmq.listener.simple.transaction-size=1
spring.rabbitmq.listener.simple.auto-startup=true
#concurrency设置的是对每个listener在初始化的时候设置的并发消费者的个数
spring.rabbitmq.listener.simple.concurrency=2
#指定最大的消费者数量.
spring.rabbitmq.listener.simple.max-concurrency=4
#消费者端的重试
spring.rabbitmq.listener.simple.retry.enabled=true
#尝试消费消息的次数
spring.rabbitmq.listener.simple.retry.max-attempts=5
#消费者重复消费一条消息的尝试时间间隔(毫秒)
spring.rabbitmq.listener.simple.retry.initial-interval=2000
#重试是无状态的还是有状态的
spring.rabbitmq.listener.simple.retry.stateless=true
spring.rabbitmq.listener.simple.retry.max-interval=100000
spring.rabbitmq.template.mandatory=true
spring.rabbitmq.template.reply-timeout=10000
#设置为true的时候RabbitTemplate(生产端)能够实现重试
spring.rabbitmq.template.retry.enabled=true
#第一次与第二次发布消息的时间间隔
spring.rabbitmq.template.retry.initial-interval=2000
#尝试发布消息的最大数量
spring.rabbitmq.template.retry.max-attempts=5
#尝试发布消息的最大时间间隔 10000
spring.rabbitmq.template.retry.max-interval=10000
#一次尝试时间间隔的乘数
spring.rabbitmq.template.retry.multiplier=2.0

custom.rabbitmq.exchange.direct.consumeDetail=consumeDetail_exchange
custom.rabbitmq.queue.consumeDetail=consumeDetail_queue
custom.rabbitmq.routingKey.consumeDetail=routingKey.consumeDetail


#eureka配置
eureka.client.service-url.defaultZone=http://chengxp:3225230@49.235.97.72:9999/eureka/
eureka.client.register-with-eureka=true
eureka.client.healthcheck.enabled=true
eureka.client.fetch-registry=true
#缓存清单的更新时间,eureka.client.fetch-registry为true时,才生效
eureka.client.registry-fetch-interval-seconds=20
eureka.instance.lease-renewal-interval-in-seconds=20

spring.application.name=personalmanage

management.security.enabled=false


